// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace VolunteerApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417012228_CrearTabla")]
    partial class CrearTabla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RolesPrivilegio", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<int>("PrivilegioId")
                        .HasColumnType("int")
                        .HasColumnName("PrivilegioID");

                    b.HasKey("RolId", "PrivilegioId");

                    b.HasIndex("PrivilegioId");

                    b.ToTable("RolesPrivilegios", (string)null);
                });

            modelBuilder.Entity("VoluntarioEvento", b =>
                {
                    b.Property<int>("VoluntarioEventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoluntarioEventoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoluntarioEventoId"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    b.Property<DateTime>("FechaAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("int")
                        .HasColumnName("VoluntarioID");

                    b.HasKey("VoluntarioEventoId");

                    b.HasIndex("EventoId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("VoluntariosEventos", (string)null);
                });

            modelBuilder.Entity("VolunteerApi.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CursoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"));

                    b.Property<string>("Categoria")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Dificultad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("VolunteerApi.Models.Donadore", b =>
                {
                    b.Property<int>("DonadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DonadorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonadorId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CiNit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CI_NIT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroReferencia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DonadorId");

                    b.HasIndex("CiNit")
                        .IsUnique();

                    b.ToTable("Donadores");
                });

            modelBuilder.Entity("VolunteerApi.Models.Especialidade", b =>
                {
                    b.Property<int>("EspecialidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EspecialidadID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspecialidadId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreEspecialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EspecialidadId");

                    b.HasIndex("NombreEspecialidad")
                        .IsUnique();

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("VolunteerApi.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("int")
                        .HasColumnName("OrganizadorID");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EventoId");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("VolunteerApi.Models.HistorialCapacitacion", b =>
                {
                    b.Property<int>("HistorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistorialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistorialId"));

                    b.Property<int?>("CursoId")
                        .HasColumnType("int")
                        .HasColumnName("CursoID");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int?>("VoluntarioId")
                        .HasColumnType("int")
                        .HasColumnName("VoluntarioID");

                    b.HasKey("HistorialId");

                    b.HasIndex("CursoId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("HistorialCapacitacion", (string)null);
                });

            modelBuilder.Entity("VolunteerApi.Models.Privilegio", b =>
                {
                    b.Property<int>("PrivilegioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PrivilegioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrivilegioId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombrePrivilegio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PrivilegioId");

                    b.HasIndex("NombrePrivilegio")
                        .IsUnique();

                    b.ToTable("Privilegios");
                });

            modelBuilder.Entity("VolunteerApi.Models.Role", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolId");

                    b.HasIndex("NombreRol")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("VolunteerApi.Models.Tarea", b =>
                {
                    b.Property<int>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TareaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TareaId"));

                    b.Property<int?>("AdministradorId")
                        .HasColumnType("int")
                        .HasColumnName("AdministradorID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("FechaAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("FechaLimite")
                        .HasColumnType("date");

                    b.Property<int?>("VoluntarioId")
                        .HasColumnType("int")
                        .HasColumnName("VoluntarioID");

                    b.HasKey("TareaId");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("VolunteerApi.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VolunteerApi.Models.Voluntario", b =>
                {
                    b.Property<int>("VoluntarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoluntarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoluntarioId"));

                    b.Property<string>("Domicilio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EspecialidadId")
                        .HasColumnType("int")
                        .HasColumnName("EspecialidadID");

                    b.Property<DateOnly?>("FechaNac")
                        .HasColumnType("date");

                    b.Property<string>("NumeroCelular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("VoluntarioId");

                    b.HasIndex("EspecialidadId");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasFilter("[UsuarioID] IS NOT NULL");

                    b.ToTable("Voluntarios");
                });

            modelBuilder.Entity("RolesPrivilegio", b =>
                {
                    b.HasOne("VolunteerApi.Models.Privilegio", null)
                        .WithMany()
                        .HasForeignKey("PrivilegioId")
                        .IsRequired();

                    b.HasOne("VolunteerApi.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .IsRequired();
                });

            modelBuilder.Entity("VoluntarioEvento", b =>
                {
                    b.HasOne("VolunteerApi.Models.Evento", "Evento")
                        .WithMany("VoluntariosEventos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VoluntarioEvento_Evento");

                    b.HasOne("VolunteerApi.Models.Voluntario", "Voluntario")
                        .WithMany("VoluntariosEventos")
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VoluntarioEvento_Voluntario");

                    b.Navigation("Evento");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("VolunteerApi.Models.Evento", b =>
                {
                    b.HasOne("VolunteerApi.Models.Usuario", "Organizador")
                        .WithMany("Eventos")
                        .HasForeignKey("OrganizadorId")
                        .HasConstraintName("FK__Eventos__Organiz__66603565");

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("VolunteerApi.Models.HistorialCapacitacion", b =>
                {
                    b.HasOne("VolunteerApi.Models.Curso", "Curso")
                        .WithMany("HistorialCapacitacions")
                        .HasForeignKey("CursoId");

                    b.HasOne("VolunteerApi.Models.Voluntario", "Voluntario")
                        .WithMany("HistorialCapacitacions")
                        .HasForeignKey("VoluntarioId");

                    b.Navigation("Curso");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("VolunteerApi.Models.Tarea", b =>
                {
                    b.HasOne("VolunteerApi.Models.Usuario", "Administrador")
                        .WithMany("Tareas")
                        .HasForeignKey("AdministradorId");

                    b.HasOne("VolunteerApi.Models.Voluntario", "Voluntario")
                        .WithMany("Tareas")
                        .HasForeignKey("VoluntarioId");

                    b.Navigation("Administrador");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("VolunteerApi.Models.Usuario", b =>
                {
                    b.HasOne("VolunteerApi.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("VolunteerApi.Models.Voluntario", b =>
                {
                    b.HasOne("VolunteerApi.Models.Especialidade", "Especialidad")
                        .WithMany("Voluntarios")
                        .HasForeignKey("EspecialidadId");

                    b.HasOne("VolunteerApi.Models.Usuario", "Usuario")
                        .WithOne("Voluntario")
                        .HasForeignKey("VolunteerApi.Models.Voluntario", "UsuarioId");

                    b.Navigation("Especialidad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VolunteerApi.Models.Curso", b =>
                {
                    b.Navigation("HistorialCapacitacions");
                });

            modelBuilder.Entity("VolunteerApi.Models.Especialidade", b =>
                {
                    b.Navigation("Voluntarios");
                });

            modelBuilder.Entity("VolunteerApi.Models.Evento", b =>
                {
                    b.Navigation("VoluntariosEventos");
                });

            modelBuilder.Entity("VolunteerApi.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("VolunteerApi.Models.Usuario", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Tareas");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("VolunteerApi.Models.Voluntario", b =>
                {
                    b.Navigation("HistorialCapacitacions");

                    b.Navigation("Tareas");

                    b.Navigation("VoluntariosEventos");
                });
#pragma warning restore 612, 618
        }
    }
}
